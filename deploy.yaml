# deploy.yaml
---
- name: "Installation site Web complet avec docker compose"
  hosts: web
  become: true
  vars:
    app_directory: /opt/efcs_app
  vars_files:
    - ./vars/secret-varaibles.yaml
  pre_tasks:
    - name: INSTALL DEPENDANCES DOCKER
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present
        update_cache: yes
      tags: docker

    - name: AJOUT CLE GPG DE DOCKER
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      tags: docker

    - name: AJOUT DEPOT APT DE DOCKER
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu jammy stable
        state: present
      tags: docker

  tasks:
    - name: INSTALL DOCKER
      apt:
        name: docker-ce
        state: present
        update_cache: yes
      tags: docker

    - name: DEMARRE DOCKER
      ansible.builtin.systemd_service:
        state: started
        name: docker
      tags: docker

    - name: Créer repertoire 'tp_efcs'
      ansible.builtin.file:
        path: "{{ app_directory }}/tp_efcs"
        state: directory
        owner: "{{ ansible_user }}"
        group: docker
        mode: '0755'
      tags: directories

    - name: Créer repertoire 'group_vars'
      ansible.builtin.file:
        path: "{{ app_directory }}/group_vars"
        state: directory
        owner: "{{ ansible_user }}"
        group: docker
        mode: '0755'
      tags: directories

    - name: Créer repertoire 'vars'
      ansible.builtin.file:
        path: "{{ app_directory }}/vars"
        state: directory
        owner: "{{ ansible_user }}"
        group: docker
        mode: '0755'
      tags: directories

    - name: Créer repertoire 'tp_efcs/files'
      ansible.builtin.file:
        path: "{{ app_directory }}/tp_efcs/files"
        state: directory
        owner: "{{ ansible_user }}"
        group: docker
        mode: '0755'
      tags: directories

    - name: Créer repertoire 'tp_efcs/files/docker-compose'
      ansible.builtin.file:
        path: "{{ app_directory }}/tp_efcs/files/docker-compose"
        state: directory
        owner: "{{ ansible_user }}"
        group: docker
        mode: '0755'
      tags: directories

    - name: Créer repertoire 'tp_efcs/files/docker-compose/conf'
      ansible.builtin.file:
        path: "{{ app_directory }}/tp_efcs/files/docker-compose/conf"
        state: directory
        owner: "{{ ansible_user }}"
        group: docker
        mode: '0755'
      tags: directories

    - name: Créer repertoire 'tp_efcs/files/docker-compose/html'
      ansible.builtin.file:
        path: "{{ app_directory }}/tp_efcs/files/docker-compose/html"
        state: directory
        owner: "{{ ansible_user }}"
        group: docker
        mode: '0755'
      tags: directories

    - name: Créer repertoire 'tp_efcs/files/docker-compose/php'
      ansible.builtin.file:
        path: "{{ app_directory }}/tp_efcs/files/docker-compose/php"
        state: directory
        owner: "{{ ansible_user }}"
        group: docker
        mode: '0755'
      tags: directories

    - name: Copier compose.yaml
      ansible.builtin.template:
        src: files/docker-compose/compose.yaml
        dest: "{{ app_directory }}/compose.yaml"
        owner: "{{ ansible_user }}"
        group: docker
        mode: '0644'
        notify: restart compose
      tags: copy, deploy

    - name: copier default.conf
      ansible.builtin.copy:
        src: files/docker-compose/conf/default.conf
        dest: "{{ app_directory }}/conf/default.conf"
        owner: "{{ ansible_user }}"
        group: docker
        mode: '0644'
        notify: restart compose
      tags: copy, files

    - name: copier index.php
      ansible.builtin.copy:
        src: files/docker-compose/html/index.php
        dest: "{{ app_directory }}/html/index.php"
        owner: "{{ ansible_user }}"
        group: docker
        mode: '0644'
        notify: restart compose
      tags: copy, files

    - name: copier dockerfile
      ansible.builtin.copy:
        src: files/docker-compose/php/Dockerfile
        dest: "{{ app_directory }}/php/Dockerfile"
        owner: "{{ ansible_user }}"
        group: docker
        mode: '0644'
        notify: restart compose
      tags: copy, files

  post_tasks:
    - name: AFFICHER ETAT DES CONTENEURS
      ansible.builtin.command: docker compose ps
      args:
        chdir: "{{ app_directory }}"
      tags: deploy, status

    - name: afficher journaux nginx
      ansible.builtin.command: docker compose logs nginx
      args:
        chdir: "{{ app_directory }}"
      register: nginx_logs
      changed_when: false
      tags: status
